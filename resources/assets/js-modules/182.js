__d(function(e,t,s,o){"use strict";var r=t(55),n=t(60),i=t(183),p=t(176),a=t(236),l=t(56),d=t(238),c=t(108),h=n.PropTypes,u=h.shape({type:n.PropTypes.oneOf(["RippleAndroid"]),color:h.number,borderless:h.bool}),b=h.shape({type:n.PropTypes.oneOf(["ThemeAttrAndroid"]),attribute:h.string.isRequired}),f=h.oneOfType([u,b]),y={top:20,left:20,right:20,bottom:30},P=n.createClass({displayName:"TouchableNativeFeedback",propTypes:babelHelpers.extends({},a.propTypes,{background:f,useForeground:h.bool}),statics:{SelectableBackground:function(){return{type:"ThemeAttrAndroid",attribute:"selectableItemBackground"}},SelectableBackgroundBorderless:function(){return{type:"ThemeAttrAndroid",attribute:"selectableItemBackgroundBorderless"}},Ripple:function(e,t){return{type:"RippleAndroid",color:c(e),borderless:t}},canUseNativeForeground:function(){return r.Version>=23}},mixins:[p.Mixin],getDefaultProps:function(){return{background:this.SelectableBackground()}},getInitialState:function(){return this.touchableGetInitialState()},componentDidMount:function(){d(this.props)},componentWillReceiveProps:function(e){d(e)},touchableHandleActivePressIn:function(e){this.props.onPressIn&&this.props.onPressIn(e),this._dispatchPressedStateChange(!0),this._dispatchHotspotUpdate(this.pressInLocation.locationX,this.pressInLocation.locationY)},touchableHandleActivePressOut:function(e){this.props.onPressOut&&this.props.onPressOut(e),this._dispatchPressedStateChange(!1)},touchableHandlePress:function(e){this.props.onPress&&this.props.onPress(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||y},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn},touchableGetLongPressDelayMS:function(){return this.props.delayLongPress},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut},_handleResponderMove:function(e){this.touchableHandleResponderMove(e),this._dispatchHotspotUpdate(e.nativeEvent.locationX,e.nativeEvent.locationY)},_dispatchHotspotUpdate:function(e,t){l.dispatchViewManagerCommand(i.findNodeHandle(this),l.RCTView.Commands.hotspotUpdate,[e||0,t||0])},_dispatchPressedStateChange:function(e){l.dispatchViewManagerCommand(i.findNodeHandle(this),l.RCTView.Commands.setPressed,[e])},render:function(){var e,t=n.Children.only(this.props.children),s=t.props.children;p.TOUCH_TARGET_DEBUG&&"View"===t.type.displayName&&(Array.isArray(s)||(s=[s]),s.push(p.renderDebugView({color:"brown",hitSlop:this.props.hitSlop}))),this.props.useForeground&&P.canUseNativeForeground();var o=this.props.useForeground&&P.canUseNativeForeground()?"nativeForegroundAndroid":"nativeBackgroundAndroid",r=babelHelpers.extends({},t.props,(e={},babelHelpers.defineProperty(e,o,this.props.background),babelHelpers.defineProperty(e,"accessible",!1!==this.props.accessible),babelHelpers.defineProperty(e,"accessibilityLabel",this.props.accessibilityLabel),babelHelpers.defineProperty(e,"accessibilityComponentType",this.props.accessibilityComponentType),babelHelpers.defineProperty(e,"accessibilityTraits",this.props.accessibilityTraits),babelHelpers.defineProperty(e,"children",s),babelHelpers.defineProperty(e,"testID",this.props.testID),babelHelpers.defineProperty(e,"onLayout",this.props.onLayout),babelHelpers.defineProperty(e,"hitSlop",this.props.hitSlop),babelHelpers.defineProperty(e,"onStartShouldSetResponder",this.touchableHandleStartShouldSetResponder),babelHelpers.defineProperty(e,"onResponderTerminationRequest",this.touchableHandleResponderTerminationRequest),babelHelpers.defineProperty(e,"onResponderGrant",this.touchableHandleResponderGrant),babelHelpers.defineProperty(e,"onResponderMove",this._handleResponderMove),babelHelpers.defineProperty(e,"onResponderRelease",this.touchableHandleResponderRelease),babelHelpers.defineProperty(e,"onResponderTerminate",this.touchableHandleResponderTerminate),e));return n.cloneElement(t,r)}});s.exports=P},182);