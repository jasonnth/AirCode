__d(function(e,t,n,i){"use strict";function r(e,t){var n=e.length-t.length;return n>0?1:n<0?-1:e>t?1:-1}function a(e,t){return e.index>t.index?1:e.index<t.index?-1:r(e.key,t.key)}function s(e,t){return e.key===t.key&&e.index===t.index&&e.isStale===t.isStale&&e.isActive===t.isActive&&o(e.route,t.route)}function o(e,t){return e&&t?e.key===t.key&&f(e,t):e===t}function u(e,t,n){if(n===t)return e;var i=new Map,r=new Map,o=new Map;e.forEach(function(e){var t=e.key;e.isStale&&o.set(t,e),i.set(t,e)});var u=new Set;t.routes.forEach(function(e,t){var n=h+e.key,i={index:t,isActive:!1,isStale:!1,key:n,route:e};c(!u.has(n),"navigationState.routes["+t+'].key "'+n+'" conflicts with another route!'),u.add(n),o.has(n)&&o.delete(n),r.set(n,i)}),n&&n.routes.forEach(function(e,t){var n=h+e.key;r.has(n)||o.set(n,{index:t,isActive:!1,isStale:!0,key:n,route:e})});var f=[],l=function(e){var t=e.key,n=i.has(t)?i.get(t):null;n&&s(n,e)?f.push(n):f.push(e)};o.forEach(l),r.forEach(l),f.sort(a);var v=0;return f.forEach(function(e,n){var i=!e.isStale&&e.index===t.index;i!==e.isActive&&(f[n]=babelHelpers.extends({},e,{isActive:i})),i&&v++}),c(1===v,"there should always be only one scene active, not %s.",v),f.length!==e.length?f:f.some(function(t,n){return!s(e[n],t)})?f:e}var c=t(18),f=t(151),h="scene_";n.exports=u},350);