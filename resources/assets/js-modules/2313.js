__d(function(e,t,r,i){Object.defineProperty(i,"__esModule",{value:!0});var l=t(412),n=babelHelpers.interopRequireDefault(l),a=t(271),o=(babelHelpers.interopRequireDefault(a),t(790)),s=t(654),u=t(379),p=babelHelpers.interopRequireDefault(u),d=t(1352),b=babelHelpers.interopRequireDefault(d),f=t(789),c=babelHelpers.interopRequireDefault(f),D=t(2300),h=t(2301),y={loadIDCountries:n.default.func.isRequired},C=function(e){function t(){return babelHelpers.classCallCheck(this,t),babelHelpers.possibleConstructorReturn(this,e.apply(this,arguments))}return babelHelpers.inherits(t,e),t.prototype.render=function(){var e=this;return babelHelpers.jsx(c.default,{},void 0,babelHelpers.jsx(b.default,{id:h.LOAD_ID_COUNTRIES_FAILED_TOAST,description:p.default.phrase("We had trouble loading the ID types available in your area.",null,"Error message in identity flow indicating that we coud not load supported id types"),action:p.default.phrase("Try again",null,"Prompt to try reloading list of countries"),onActionPress:function(){return e.props.loadIDCountries()}}),babelHelpers.jsx(b.default,{id:h.UNSUPPORTED_ID_FEEDBACK_SENT_TOAST,description:p.default.phrase("Thanks. We\u2019ll use your feedback to make this process better.",null,"Confirmation message in identity verification flow after user submits feedback about unsupported ID type")}))},t}(a.Component);C.propTypes=y,i.default=(0,o.connect)(null,function(e){return(0,s.bindActionCreators)({loadIDCountries:D.loadIDCountries},e)})(C)},2313);