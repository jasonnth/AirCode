__d(function(e,t,r,n){function o(e){return(0,b.default)((0,_.governmentIDSelector)(e),["selectedIDCountry"])}function a(e){return{sendUnsupportedIDTypeFeedback:(0,d.bindActionCreators)(m.sendUnsupportedIDTypeFeedback,e)}}Object.defineProperty(n,"__esModule",{value:!0});var l=t(412),s=babelHelpers.interopRequireDefault(l),i=t(271),p=babelHelpers.interopRequireDefault(i),u=t(790),d=t(654),c=t(759),b=babelHelpers.interopRequireDefault(c),y=t(379),f=babelHelpers.interopRequireDefault(y),h=t(1366),D=babelHelpers.interopRequireDefault(h),T=t(832),I=babelHelpers.interopRequireDefault(T),g=t(410),H=babelHelpers.interopRequireDefault(g),v=t(2314),C=babelHelpers.interopRequireDefault(v),_=t(2297),m=t(2300),R=t(2318),S=babelHelpers.interopRequireDefault(R),k=t(2298),P=t(2316),x=babelHelpers.interopRequireDefault(P),q=t(2311),E=t(772),F=babelHelpers.interopRequireDefault(E),U={sendUnsupportedIDTypeFeedback:s.default.func.isRequired,selectedIDCountry:C.default},w=function(e){function t(r){babelHelpers.classCallCheck(this,t);var n=babelHelpers.possibleConstructorReturn(this,e.call(this,r));return n.state={selectedIDType:null,otherIDTypeText:null},n.idTypeSelectionChanged=n.idTypeSelectionChanged.bind(n),n.sendFeedback=n.sendFeedback.bind(n),n}return babelHelpers.inherits(t,e),t.prototype.idTypeSelectionChanged=function(e){var t=e.idType,r=e.otherIDTypeText;this.setState({selectedIDType:t,otherIDTypeText:r})},t.prototype.sendFeedback=function(){var e=this.state,t=e.selectedIDType,r=e.otherIDTypeText,n=this.props.selectedIDCountry,o=n&&n.countryCodeAlpha2;this.props.sendUnsupportedIDTypeFeedback(o,t,r),H.default.pop()},t.prototype.render=function(){var e=this.props.selectedIDCountry,t=this.state,r=t.selectedIDType,n=t.otherIDTypeText,o=void 0;o=e?f.default.phrase("We\u2019re working hard to support more ID types for %{countryName}. In the meantime, you can choose one of the available ID types, or try using an ID from another country.",{countryName:e.name},"Error text when user`s id type is not listed in supported ids list"):f.default.phrase("We\u2019re working hard to support more ID types. In the meantime, you can choose one of the available ID types, or try using an ID from another country.",null,"Error text when user`s id type is not listed in supported ids list (no country name)");var a=null!=r&&(r!==k.ID_TYPE_OTHER_UNSUPPORTED||null!=n&&n.length>0),l=k.SUPPORTED_ID_TYPES.filter(function(t){return!(e&&e.idTypes.find(function(e){return e.type===t}))}),s=[].concat(babelHelpers.toConsumableArray(l),babelHelpers.toConsumableArray(k.UNSUPPORTED_ID_TYPES));return babelHelpers.jsx(F.default,{title:f.default.phrase("Sorry about that.",null,"Title for a screen in identity verification flow"),footer:babelHelpers.jsx(I.default,{babu:!0,buttonText:f.default.phrase("Send feedback",null,"Button title to provide feedback"),onButtonPress:this.sendFeedback,buttonDisabled:!a})},void 0,babelHelpers.jsx(D.default,{},void 0,o),babelHelpers.jsx(S.default,{title:f.default.phrase("What type of ID did you want to provide?",null,"Section heading asking users to provide feedback on what type of IDs we should support"),idTypes:s,selectedIDType:r,otherIDTypeText:n,onSelectionChanged:this.idTypeSelectionChanged}))},t}(p.default.Component);w.getPageNameForImpressionLogging=function(){return"verification_id_type_not_supported"},w.getMetadataForLogging=function(e,t){var r=o(t),n=r.selectedIDCountry;return{country_code:n&&n.countryCodeAlpha2}},w.propTypes=U,n.default=(0,x.default)(q.ID_TYPE_NOT_SUPPORTED)((0,u.connect)(o,a)(w))},2322);