__d(function(e,t,n,r){function i(e){s=e.experiments,f=e.experimentOverrides}Object.defineProperty(r,"__esModule",{value:!0});var a=t(44),m=t(42),d=babelHelpers.interopRequireDefault(m),l=t(686),o=babelHelpers.interopRequireDefault(l),u=d.default.module({moduleName:"ExperimentBridge",isEventEmitter:!0,mock:{initialExperiments:{},initialExperimentOverrides:{}}}),s=u.initialExperiments||{},f=u.initialExperimentOverrides||{};u.emitter.addListener("airbnb.experimentsUpdated",i);var p={logTreatment:function(e,t){var n={event_name:"experiment_assignment",event_data:{experiment:e,treatment:t}};o.default.logEvent(n)},findTreatment:function(e){return(s[e]||{}).assigned_treatment},findTreatmentOverride:function(e){return f[e]},killSwitchNameForERFExperiment:function(e){return"erf-"+a.Platform.OS+"-unknown-version-"+e},isExperimentKillswitched:function(){return!1},deliverTreatment:function(e,t,n){return n[t]()},deliverExperiment:function(e,t){if(!("treatment_unknown"in t))throw new Error("treatment_unknown not passed for experiment "+e);var n=this.findTreatment(e),r=this.findTreatmentOverride(e),i=r||n;return!this.isExperimentKillswitched(e)&&i in t||(i="treatment_unknown"),i===n&&this.logTreatment(e,i),this.deliverTreatment(e,i,t)}};r.default=p},707);