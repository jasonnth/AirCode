__d(function(e,t,n,a){"use strict";function c(){m(L.ReactReconcileTransaction&&v,"ReactUpdates: must inject a reconcile transaction class and batching strategy")}function i(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=d.getPooled(),this.reconcileTransaction=L.ReactReconcileTransaction.getPooled(!0)}function o(e,t,n,a,i,o){return c(),v.batchedUpdates(e,t,n,a,i,o)}function r(e,t){return e._mountOrder-t._mountOrder}function s(e){var t=e.dirtyComponentsLength;m(t===b.length,"Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).",t,b.length),b.sort(r),y++;for(var n=0;n<t;n++){var a=b[n],c=a._pendingCallbacks;a._pendingCallbacks=null;var i;if(h.logTopLevelRenders){var o=a;a._currentElement.type.isReactTopLevelWrapper&&(o=a._renderedComponent),i="React update: "+o.getName(),console.time(i)}if(g.performUpdateIfNecessary(a,e.reconcileTransaction,y),i&&console.timeEnd(i),c)for(var s=0;s<c.length;s++)e.callbackQueue.enqueue(c[s],a.getPublicInstance())}}function l(e){if(c(),!v.isBatchingUpdates)return void v.batchedUpdates(l,e);b.push(e),null==e._updateBatchNumber&&(e._updateBatchNumber=y+1)}function u(e,t){m(v.isBatchingUpdates,"ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched."),R.enqueue(e,t),U=!0}var d=t(137),p=t(138),h=t(139),g=t(140),f=t(144),m=t(18),b=[],y=0,R=d.getPooled(),U=!1,v=null,T={initialize:function(){this.dirtyComponentsLength=b.length},close:function(){this.dirtyComponentsLength!==b.length?(b.splice(0,this.dirtyComponentsLength),k()):b.length=0}},C={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},_=[T,C];babelHelpers.extends(i.prototype,f,{getTransactionWrappers:function(){return _},destructor:function(){this.dirtyComponentsLength=null,d.release(this.callbackQueue),this.callbackQueue=null,L.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(e,t,n){return f.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,e,t,n)}}),p.addPoolingTo(i);var k=function(){for(;b.length||U;){if(b.length){var e=i.getPooled();e.perform(s,null,e),i.release(e)}if(U){U=!1;var t=R;R=d.getPooled(),t.notifyAll(),d.release(t)}}},B={injectReconcileTransaction:function(e){m(e,"ReactUpdates: must provide a reconcile transaction class"),L.ReactReconcileTransaction=e},injectBatchingStrategy:function(e){m(e,"ReactUpdates: must provide a batching strategy"),m("function"==typeof e.batchedUpdates,"ReactUpdates: must provide a batchedUpdates() function"),m("boolean"==typeof e.isBatchingUpdates,"ReactUpdates: must provide an isBatchingUpdates boolean attribute"),v=e},getBatchingStrategy:function(){return v}},L={ReactReconcileTransaction:null,batchedUpdates:o,enqueueUpdate:l,flushBatchedUpdates:k,injection:B,asap:u};n.exports=L},136);