__d(function(e,o,t,n){var r=o(271),a=babelHelpers.interopRequireDefault(r),i=o(44),p=o(1648),s=babelHelpers.interopRequireDefault(p),l=o(1651),u=babelHelpers.interopRequireDefault(l),d=o(1652),y=babelHelpers.interopRequireDefault(d),g=o(1653),h=babelHelpers.interopRequireDefault(g),m=o(1654),f=babelHelpers.interopRequireDefault(m),c=o(1655),b=babelHelpers.interopRequireDefault(c),P=o(1656),T=babelHelpers.interopRequireDefault(P),v=o(1649),C=o(1650),R=babelHelpers.interopRequireWildcard(C),M={STANDARD:"standard",SATELLITE:"satellite",HYBRID:"hybrid",TERRAIN:"terrain",NONE:"none"},_=[M.TERRAIN,M.NONE],S={uiViewClassName:"AIR<provider>Map",validAttributes:{region:!0}},D=babelHelpers.extends({},i.View.propTypes,{provider:r.PropTypes.oneOf(["google"]),style:i.View.propTypes.style,customMapStyle:r.PropTypes.array,customMapStyleString:r.PropTypes.string,showsUserLocation:r.PropTypes.bool,userLocationAnnotationTitle:r.PropTypes.string,showsMyLocationButton:r.PropTypes.bool,followsUserLocation:r.PropTypes.bool,showsPointsOfInterest:r.PropTypes.bool,showsCompass:r.PropTypes.bool,zoomEnabled:r.PropTypes.bool,rotateEnabled:r.PropTypes.bool,cacheEnabled:r.PropTypes.bool,loadingEnabled:r.PropTypes.bool,loadingBackgroundColor:i.ColorPropType,loadingIndicatorColor:i.ColorPropType,scrollEnabled:r.PropTypes.bool,pitchEnabled:r.PropTypes.bool,toolbarEnabled:r.PropTypes.bool,moveOnMarkerPress:r.PropTypes.bool,showsScale:r.PropTypes.bool,showsBuildings:r.PropTypes.bool,showsTraffic:r.PropTypes.bool,showsIndoors:r.PropTypes.bool,showsIndoorLevelPicker:r.PropTypes.bool,mapType:r.PropTypes.oneOf(Object.values(M)),region:r.PropTypes.shape({latitude:r.PropTypes.number.isRequired,longitude:r.PropTypes.number.isRequired,latitudeDelta:r.PropTypes.number.isRequired,longitudeDelta:r.PropTypes.number.isRequired}),initialRegion:r.PropTypes.shape({latitude:r.PropTypes.number.isRequired,longitude:r.PropTypes.number.isRequired,latitudeDelta:r.PropTypes.number.isRequired,longitudeDelta:r.PropTypes.number.isRequired}),liteMode:r.PropTypes.bool,maxDelta:r.PropTypes.number,minDelta:r.PropTypes.number,legalLabelInsets:i.EdgeInsetsPropType,onRegionChange:r.PropTypes.func,onRegionChangeComplete:r.PropTypes.func,onPress:r.PropTypes.func,onLongPress:r.PropTypes.func,onPanDrag:r.PropTypes.func,onMarkerPress:r.PropTypes.func,onMarkerSelect:r.PropTypes.func,onMarkerDeselect:r.PropTypes.func,onCalloutPress:r.PropTypes.func,onMarkerDragStart:r.PropTypes.func,onMarkerDrag:r.PropTypes.func,onMarkerDragEnd:r.PropTypes.func}),E=function(e){function o(t){babelHelpers.classCallCheck(this,o);var n=babelHelpers.possibleConstructorReturn(this,e.call(this,t));return n.state={isReady:"ios"===i.Platform.OS},n._onMapReady=n._onMapReady.bind(n),n._onChange=n._onChange.bind(n),n._onLayout=n._onLayout.bind(n),n}return babelHelpers.inherits(o,e),o.prototype.getChildContext=function(){return{provider:this.props.provider}},o.prototype.componentWillUpdate=function(e){var o=this.__lastRegion,t=e.region;o&&t&&(o.latitude===t.latitude&&o.longitude===t.longitude&&o.latitudeDelta===t.latitudeDelta&&o.longitudeDelta===t.longitudeDelta||this.map.setNativeProps({region:t}))},o.prototype.componentDidMount=function(){this.state.isReady&&this._updateStyle()},o.prototype._updateStyle=function(){var e=this.props.customMapStyle;this.map.setNativeProps({customMapStyleString:JSON.stringify(e)})},o.prototype._onMapReady=function(){var e=this.props,o=e.region,t=e.initialRegion;o?this.map.setNativeProps({region:o}):t&&this.map.setNativeProps({region:t}),this._updateStyle(),this.setState({isReady:!0})},o.prototype._onLayout=function(e){var o=e.nativeEvent.layout;if(o.width&&o.height){if(this.state.isReady&&!this.__layoutCalled){var t=this.props.region||this.props.initialRegion;t&&(this.__layoutCalled=!0,this.map.setNativeProps({region:t}))}this.props.onLayout&&this.props.onLayout(e)}},o.prototype._onChange=function(e){this.__lastRegion=e.nativeEvent.region,e.nativeEvent.continuous?this.props.onRegionChange&&this.props.onRegionChange(e.nativeEvent.region):this.props.onRegionChangeComplete&&this.props.onRegionChangeComplete(e.nativeEvent.region)},o.prototype.animateToRegion=function(e,o){this._runCommand("animateToRegion",[e,o||500])},o.prototype.animateToCoordinate=function(e,o){this._runCommand("animateToCoordinate",[e,o||500])},o.prototype.fitToElements=function(e){this._runCommand("fitToElements",[e])},o.prototype.fitToSuppliedMarkers=function(e,o){this._runCommand("fitToSuppliedMarkers",[e,o])},o.prototype.fitToCoordinates=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],o=arguments[1],t=o.edgePadding,n=void 0===t?{top:0,right:0,bottom:0,left:0}:t,r=o.animated,a=void 0===r||r;this._runCommand("fitToCoordinates",[e,n,a])},o.prototype.takeSnapshot=function(e){var o=this;if("ios"===i.Platform.OS&&4===arguments.length){var t=arguments[0],n=arguments[1],r=arguments[2],a=arguments[3];return void this._runCommand("takeSnapshot",[t||0,n||0,r||{},"png",1,"legacy",a])}var p={width:e.width||0,height:e.height||0,region:e.region||{},format:e.format||"png",quality:e.quality||1,result:e.result||"file"};if("png"!==p.format&&"jpg"!==p.format)throw new Error("Invalid format specified");if("file"!==p.result&&"base64"!==p.result)throw new Error("Invalid result specified");return"android"===i.Platform.OS?i.NativeModules.AirMapModule.takeSnapshot(this._getHandle(),p):"ios"===i.Platform.OS?new Promise(function(e,t){o._runCommand("takeSnapshot",[p.width,p.height,p.region,p.format,p.quality,p.result,function(o,n){o?t(o):e(n)}])}):Promise.reject("takeSnapshot not supported on this platform")},o.prototype._uiManagerCommand=function(e){return i.NativeModules.UIManager[(0,v.getAirMapName)(this.props.provider)].Commands[e]},o.prototype._mapManagerCommand=function(e){return i.NativeModules[(0,v.getAirMapName)(this.props.provider)+"Manager"][e]},o.prototype._getHandle=function(){return(0,i.findNodeHandle)(this.map)},o.prototype._runCommand=function(e,o){switch(i.Platform.OS){case"android":i.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(),this._uiManagerCommand(e),o);break;case"ios":this._mapManagerCommand(e).apply(void 0,[this._getHandle()].concat(babelHelpers.toConsumableArray(o)))}},o.prototype.render=function(){var e=this,o=void 0;if(this.state.isReady?(o=babelHelpers.extends({},this.props,{region:null,initialRegion:null,onChange:this._onChange,onMapReady:this._onMapReady,onLayout:this._onLayout}),"ios"===i.Platform.OS&&o.provider===R.PROVIDER_DEFAULT&&_.includes(o.mapType)&&(o.mapType=M.standard),o.handlePanDrag=!!o.onPanDrag):o={style:this.props.style,region:null,initialRegion:null,onChange:this._onChange,onMapReady:this._onMapReady,onLayout:this._onLayout},"android"===i.Platform.OS&&this.props.liteMode)return a.default.createElement(A,babelHelpers.extends({ref:function(o){e.map=o}},o));var t=H(this.props.provider);return a.default.createElement(t,babelHelpers.extends({ref:function(o){e.map=o}},o))},o}(a.default.Component);E.propTypes=D,E.viewConfig=S,E.childContextTypes=v.contextTypes,E.MAP_TYPES=M;var w=function(e){return(0,i.requireNativeComponent)(e,E,{nativeOnly:{onChange:!0,onMapReady:!0,handlePanDrag:!0}})},N={default:w("AIRMap")};"android"===i.Platform.OS?N.google=N.default:N.google=v.googleMapIsInstalled?w("AIRGoogleMap"):(0,v.createNotSupportedComponent)("react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.");var H=function(e){return N[e||"default"]},A=i.NativeModules.UIManager.AIRMapLite&&(0,i.requireNativeComponent)("AIRMapLite",E,{nativeOnly:{onChange:!0,onMapReady:!0,handlePanDrag:!0}});E.Marker=s.default,E.Polyline=u.default,E.Polygon=y.default,E.Circle=h.default,E.UrlTile=b.default,E.Callout=f.default,babelHelpers.extends(E,R),E.ProviderPropType=r.PropTypes.oneOf(Object.values(R)),E.Animated=i.Animated.createAnimatedComponent(E),E.AnimatedRegion=T.default,t.exports=E},1647);