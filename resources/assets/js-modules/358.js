__d(function(e,n,r,t){"use strict";var u=n(18),i={get:function(e,n){return e.routes.find(function(e){return e.key===n})||null},indexOf:function(e,n){return e.routes.map(function(e){return e.key}).indexOf(n)},has:function(e,n){return!!e.routes.some(function(e){return e.key===n})},push:function(e,n){u(-1===i.indexOf(e,n.key),"should not push route with duplicated key %s",n.key);var r=e.routes.slice();return r.push(n),babelHelpers.extends({},e,{index:r.length-1,routes:r})},pop:function(e){if(e.index<=0)return e;var n=e.routes.slice(0,-1);return babelHelpers.extends({},e,{index:n.length-1,routes:n})},jumpToIndex:function(e,n){return n===e.index?e:(u(!!e.routes[n],"invalid index %s to jump to",n),babelHelpers.extends({},e,{index:n}))},jumpTo:function(e,n){var r=i.indexOf(e,n);return i.jumpToIndex(e,r)},back:function(e){var n=e.index-1;return e.routes[n]?i.jumpToIndex(e,n):e},forward:function(e){var n=e.index+1;return e.routes[n]?i.jumpToIndex(e,n):e},replaceAt:function(e,n,r){var t=i.indexOf(e,n);return i.replaceAtIndex(e,t,r)},replaceAtIndex:function(e,n,r){if(u(!!e.routes[n],"invalid index %s for replacing route %s",n,r.key),e.routes[n]===r)return e;var t=e.routes.slice();return t[n]=r,babelHelpers.extends({},e,{index:n,routes:t})},reset:function(e,n,r){u(n.length&&Array.isArray(n),"invalid routes to replace");var t=void 0===r?n.length-1:r;if(e.routes.length===n.length&&e.index===t){var i=function(e,r){return n[r]===e};if(e.routes.every(i))return e}return u(!!n[t],"invalid index %s to reset",t),babelHelpers.extends({},e,{index:t,routes:n})}};r.exports=i},358);